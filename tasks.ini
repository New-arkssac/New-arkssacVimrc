# vim: set fenc=utf-8 ft=dosini:
# see: https://github.com/skywind3000/asynctasks.vim/wiki/Task-Config

# define a new task named "file-build"
[project-build]
command:c=gcc "$(VIM_FILEDIR)"/*.c -lm -g -o "$(VIM_FILEDIR)/$(VIM_FILENOEXT)"
cwd=$(VIM_FILEDIR)
output=quickfix
#output=terminal
#pos=TAB
errorformat=%f:%l:%m
save=2

[file-build]

# shell command, use quotation for filenames containing spaces
# check ":AsyncTaskMacro" to see available macros
command:c=gcc "$(VIM_FILEPATH)" -lm -g -o "$(VIM_FILEDIR)/$(VIM_FILENOEXT)"
command:go=go build  -o "$(VIM_FILEDIR)/$(VIM_FILENOEXT)" "$(VIM_FILEPATH)"
command:java=javac "$(VIM_FILEPATH)"

# working directory, can change to $(VIM_ROOT) for project root
cwd=$(VIM_FILEDIR)

# output mode, can be one of quickfix and terminal
# - quickfix: output to quickfix window
# - terminal: run the command in the internal terminal
output=quickfix
#output=terminal
#pos=quickfix

# this is for output=quickfix only
# if it is omitted, vim's current errorformat will be used.
errorformat=%f:%l:%m

# save file before execute
save=2

[file-run]
command:c="$(VIM_FILEDIR)/$(VIM_FILENOEXT)"
command:go=go run .
command:lua=lua "$(VIM_FILENAME)"
command:python=venv/bin/python "$(VIM_FILENAME)"
command:java=java $(VIM_FILENOEXT)
cwd=$(VIM_FILEDIR)
# 定义输出方式，在终端内运行
#output=terminal
#pos=quickfix
output=quickfix

